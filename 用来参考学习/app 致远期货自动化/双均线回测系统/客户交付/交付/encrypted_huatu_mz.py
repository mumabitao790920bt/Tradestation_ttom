#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
加密的Python文件 - huatu_mz.py
"""

import base64
import zlib
import sys
import types

def decrypt_and_run():
    """解密并执行代码"""
    # 加密的源代码
    encoded_source = """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"""
    
    try:
        # 解码和解压缩
        compressed = base64.b64decode(encoded_source.encode('ascii'))
        source_code = zlib.decompress(compressed).decode('utf-8')
        
        # 创建模块并执行
        module = types.ModuleType("__main__")
        exec(source_code, module.__dict__)
        
    except Exception as e:
        print(f"执行错误: {e}")
        sys.exit(1)

if __name__ == "__main__":
    decrypt_and_run()
